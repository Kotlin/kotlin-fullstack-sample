group = 'org.jetbrains.elemental'
version = '0.0.1-SNAPSHOT'

apply plugin: 'kotlin2js'
apply plugin: 'kotlin-dce-js'
apply plugin: 'org.jetbrains.kotlin.frontend'


dependencies {
    compile("org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version")
    compile("org.jetbrains.kotlin:kotlin-test-js:$kotlin_version")
    compile("org.jetbrains.kotlinx:kotlinx-coroutines-core-js:$kotlin_coroutines_version")
    compile("org.jetbrains.kotlinx:kotlinx-html-js:$html_version")
}

kotlinFrontend {
// uncomment this to specify exact nodejs version (bundle will be downloaded)
//    downloadNodeJsVersion = "8.7.0"

    sourceMaps = false

    npm {
        replaceVersion("kotlinx-html-js", "$html_version")
        replaceVersion("kotlinx-html-shared", "$html_version")
        replaceVersion("kotlin-js-library", "$kotlin_version")

        dependency("react")
        dependency("react-dom")
        dependency("react-router")
        dependency("jquery")
        dependency("react-markdown")

        devDependency("css-loader")
        devDependency("style-loader")
        devDependency("babel-loader")
        devDependency("@babel/core")
        devDependency("karma")
    }

    webpackBundle {
        publicPath = "/frontend/"
        port = 8080
        proxyUrl = "http://localhost:9090"
    }
}

compileKotlin2Js {
    kotlinOptions.metaInfo = true
    kotlinOptions.outputFile = "$project.buildDir.path/js/${project.name}.js"
    kotlinOptions.sourceMap = true
    kotlinOptions.moduleKind = 'commonjs'
    kotlinOptions.main = "call"
}

sourceSets {
    main {
        kotlin.srcDirs += "src"
        resources.srcDirs += "resources"
        output.resourcesDir = "build/js/resources"
    }
    test {
        kotlin.srcDirs += "test"
        resources.srcDirs += "testResources"
    }
}
